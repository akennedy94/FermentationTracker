{"version":3,"sources":["inputs/FormInput.js","inputs/NotesInput.js","Context.js","subcomponents/ProjectDisplay.js","icons/logo.png","subcomponents/LandingPage.js","index.js"],"names":["FormInput","props","className","errorPresent","type","id","for","name","title","onChange","event","parseInt","target","value","placeholder","required","readOnly","NotesInput","class","rows","Context","React","createContext","ContextProvider","Provider","ContextConsumer","Consumer","ProjectCard","project","handleStatusChange","handleDelete","handleEditClick","useState","pastDue","setPastDue","useEffect","projectDate","today","format","Date","projectDue","parseISO","compareDesc","checkDate","time","Col","Card","Header","active","style","color","fontSize","Title","projectName","Body","Text","description","weight","saltPercentage","saltWeight","notes","Row","Button","onClick","_id","variant","to","EmptyCard","projectState","ProjectDisplay","setSelectedProject","context","useContext","projects","setProjects","setEdit","filter","e","window","confirm","axios","patch","then","response","console","log","catch","error","index","findIndex","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","delete","data","updatedProjects","Container","height","length","map","LandingPage","Image","src","logo","alt","href","configure","App","edit","selectedProject","activeProjects","archivedProjects","a","get","getProjects","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","Link","exact","path","component","ProjectForm","setProjectName","setDescription","setWeight","setSaltPercentage","setSaltWeight","setTime","setNotes","projectId","setProjectId","submitted","setSubmitted","buildProject","built","newProject","alert","handleSubmit","preventDefault","addProject","handleReset","handleEdit","update","updateProject","updateLocal","splice","post","addedProject","idToUpdate","updatedProject","updatedID","toFixed","Form","Label","size","warning","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ca45ac4a.chunk.js","sourcesContent":["const FormInput = (props) => {\n  return (\n    <div>\n      <input\n        className={`form-control ${props.errorPresent ? \"form-error\" : \"\"}`}\n        type={props.type}\n        id={props.for}\n        name={props.title}\n        onChange={(event) => {\n          if (\n            parseInt(event.target.value) &&\n            parseInt(event.target.value) < 0\n          ) {\n            return;\n          } else {\n            props.onChange(event.target.value);\n          }\n        }}\n        value={`${props.value === null ? \"\" : props.value}`}\n        placeholder={props.title}\n        required\n        readOnly={props.readOnly ? props.readOnly : false}\n      />\n      <br />\n    </div>\n  );\n};\n\nexport default FormInput;\n","const NotesInput = (props) => {\n  return (\n    <div>\n      <textarea\n        class=\"form-control\"\n        id={props.for}\n        rows=\"3\"\n        onChange={(event) => props.onChange(event.target.value)}\n        placeholder={props.title}\n        value={props.value ? props.value : null}\n      />\n      <br />\n    </div>\n  );\n};\n\nexport default NotesInput;\n","import React from \"react\";\n\nconst Context = React.createContext([]);\n\nexport const ContextProvider = Context.Provider;\nexport const ContextConsumer = Context.Consumer;\n\nexport default Context;\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Container, Button, Row, Col, Card } from \"react-bootstrap\";\r\nimport { ContextConsumer } from \"../Context.js\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { compareDesc, format, parseISO } from \"date-fns\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../css/projectDisplay.css\";\r\n\r\nconst ProjectDisplay = ({ projectState, setSelectedProject }) => {\r\n  const context = useContext(ContextConsumer);\r\n  const [projects, setProjects, setEdit] = [\r\n    context.projects,\r\n    context.setProjects,\r\n    context.setEdit,\r\n  ];\r\n  const filter = projects.filter((project) => project.active === projectState);\r\n\r\n  // sets project status to complete\r\n  const handleStatusChange = (e) => {\r\n    const confirm = window.confirm(\"Mark project as completed?\");\r\n    if (confirm === true) {\r\n      const setStatus = axios\r\n        .patch(\"/fermentation/projects\", { id: e.target.id })\r\n        .then((response) => console.log(response))\r\n        .catch((error) => console.log(error));\r\n\r\n      const index = projects.findIndex(\r\n        (project) => project._id === e.target.id\r\n      );\r\n      projects[index].active = false;\r\n\r\n      setProjects([...projects]);\r\n\r\n      toast.success(\"Project moved to archive!\", {\r\n        position: \"bottom-center\",\r\n        autoClose: 4000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: false,\r\n        draggable: false,\r\n        progress: undefined,\r\n      });\r\n    }\r\n  };\r\n\r\n  // Set form to edit\r\n  const handleEditClick = (project) => {\r\n    setSelectedProject(project);\r\n    setEdit(true);\r\n  };\r\n\r\n  // deletes project from database\r\n  const handleDelete = (e) => {\r\n    const confirm = window.confirm(\r\n      \"Are you sure you want to delete this project?\"\r\n    );\r\n    if (confirm === true) {\r\n      const deleteProject = axios\r\n        .delete(\"/fermentation/projects\", { data: { id: e.target.id } })\r\n        .then((response) => console.log(response))\r\n        .catch((error) => console.log(error));\r\n\r\n      const updatedProjects = projects.filter(\r\n        (project) => project._id !== e.target.id\r\n      );\r\n      setProjects(updatedProjects);\r\n\r\n      toast.success(\"Project Deleted!\", {\r\n        position: \"bottom-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: false,\r\n        draggable: false,\r\n        progress: undefined,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container style={{ height: \"100rem\" }}>\r\n      <Row>\r\n        {filter.length === 0 ? (\r\n          <Col className=\"d-flex justify-content-center\">\r\n            <EmptyCard projectState={projectState} />\r\n          </Col>\r\n        ) : (\r\n          filter.map((project) => {\r\n            return (\r\n              <ProjectCard\r\n                project={project}\r\n                handleStatusChange={handleStatusChange}\r\n                handleDelete={handleDelete}\r\n                handleEditClick={handleEditClick}\r\n              />\r\n            );\r\n          })\r\n        )}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst ProjectCard = ({\r\n  project,\r\n  handleStatusChange,\r\n  handleDelete,\r\n  handleEditClick,\r\n}) => {\r\n  const [pastDue, setPastDue] = useState(false);\r\n\r\n  // check to see if before or after due date\r\n  const checkDate = (projectDate) => {\r\n    const today = format(new Date(), \"yyyy-MM-dd\");\r\n    const projectDue = format(parseISO(projectDate), \"yyyy-MM-dd\");\r\n\r\n    if (compareDesc(parseISO(today), parseISO(projectDue)) < 0) {\r\n      setPastDue(true);\r\n    }\r\n  };\r\n\r\n  // set pastDue state on component mount\r\n  useEffect(() => {\r\n    checkDate(project.time);\r\n  }, []);\r\n\r\n  return (\r\n    <Col className=\"project-col\">\r\n      <Card key={project._id}>\r\n        <Card.Header>\r\n          {pastDue && project.active ? (\r\n            <i\r\n              className=\"fas fa-exclamation mr-4 mt-1\"\r\n              style={{ color: \"red\", fontSize: \"1.5rem\" }}\r\n              title=\"This project is past due!\"\r\n            />\r\n          ) : null}\r\n          <Card.Title className=\"mt-1\">{project.projectName}</Card.Title>\r\n        </Card.Header>\r\n\r\n        <Card.Body>\r\n          <Card.Text className=\"text-left\">\r\n            <strong>Description:</strong> {project.description} <br />\r\n            <strong>Total Dry Weight (g):</strong> {project.weight} g <br />\r\n            <strong>Salt Percentage:</strong> {project.saltPercentage}% <br />\r\n            <strong>Total Salt:</strong> {project.saltWeight} g <br />\r\n            {project.active ? (\r\n              <div>\r\n                <strong>Complete on:</strong> {project.time}\r\n                <br />\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <strong>Completed on:</strong> {project.time}\r\n                <br />\r\n              </div>\r\n            )}\r\n            <strong>Notes:</strong>\r\n            <br /> {project.notes === \"\" ? \"N/A\" : project.notes}\r\n          </Card.Text>\r\n          <Row className=\"mt-4 btn-row\">\r\n            <Col className=\"btn-col\">\r\n              {project.active ? (\r\n                <Button\r\n                  className=\"ut-btn\"\r\n                  onClick={handleStatusChange}\r\n                  id={project._id}\r\n                >\r\n                  Complete Project\r\n                </Button>\r\n              ) : null}\r\n            </Col>\r\n            <Col className=\"btn-col\">\r\n              <Button\r\n                variant=\"danger\"\r\n                className=\"ut-btn\"\r\n                onClick={handleDelete}\r\n                id={project._id}\r\n              >\r\n                Delete Project\r\n              </Button>\r\n            </Col>\r\n            <Col className=\"btn-col\">\r\n              {project.active ? (\r\n                <Link to=\"/projectForm\">\r\n                  <Button\r\n                    variant=\"warning\"\r\n                    className=\"ut-btn\"\r\n                    onClick={() => handleEditClick(project)}\r\n                    id={project._id}\r\n                  >\r\n                    Edit Project\r\n                  </Button>\r\n                </Link>\r\n              ) : null}\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n  );\r\n};\r\n\r\nconst EmptyCard = ({ projectState }) => {\r\n  return (\r\n    <Card id=\"empty-card\">\r\n      <Card.Header className=\"empty-header\">\r\n        <Card.Title className=\"mt-2\">\r\n          You haven't {projectState ? \"added\" : \"archived\"} any projects yet!\r\n        </Card.Title>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Card.Text>\r\n          This page will contain projects{\" \"}\r\n          {projectState\r\n            ? \"you're currently working on!\"\r\n            : \"you've completed and archived!\"}\r\n          . <br></br>\r\n          {projectState\r\n            ? \"You can start tracking projects by filling out the form!\"\r\n            : \"You can complete and archive a project in the active projects screen!\"}\r\n        </Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ProjectDisplay;\r\n","export default __webpack_public_path__ + \"static/media/logo.82fea119.png\";","import logo from \"../icons/logo.png\";\nimport \"../css/landingPage.css\";\nimport { Container, Row, Col, Image, Button } from \"react-bootstrap\";\n\nconst LandingPage = () => {\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <Image src={logo} alt=\"brand logo\" className=\"logo\" />\n        </Col>\n        <Col className=\"text-center text-col\">\n          <h1>Fermentation Tracker</h1> <br />\n          <p>\n            {\" \"}\n            This a web app for tracking different lacto-fermentation projects!{\" \"}\n            <br /> <br />\n            For more information about the background or technical workings of\n            this app, please checkout the readme located in the project's\n            <a\n              href=\"https://github.com/akennedy94/FermentationTracker\"\n              alt=\"github link\"\n            >\n              &nbsp;github repository.\n            </a>{\" \"}\n            <br /> <br />\n            To begin using this app, click the button below to be taken to the\n            project form! <br /> <br />\n          </p>\n          <Row className=\"justify-content-center mb-2\">\n            <Button href=\"/projectForm\" className=\"btn btn-lg\">\n              Get Started!\n            </Button>\n          </Row>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default LandingPage;\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport FormInput from \"./inputs/FormInput\";\r\nimport NotesInput from \"./inputs/NotesInput\";\r\nimport ProjectDisplay from \"./subcomponents/ProjectDisplay.js\";\r\nimport LandingPage from \"./subcomponents/LandingPage.js\";\r\nimport axios from \"axios\";\r\nimport { Form, Button, Row, Col, Navbar, Nav } from \"react-bootstrap\";\r\nimport { toast } from \"react-toastify\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport \"./css/index.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { ContextConsumer, ContextProvider } from \"./Context.js\";\r\n\r\ntoast.configure();\r\n\r\nconst App = () => {\r\n  const [projects, setProjects] = useState([]);\r\n  const [edit, setEdit] = useState(false);\r\n  const [selectedProject, setSelectedProject] = useState({});\r\n  const activeProjects = projects.filter((project) => project.active === true)\r\n    .length;\r\n  const archivedProjects = projects.filter(\r\n    (project) => project.active === false\r\n  ).length;\r\n\r\n  async function getProjects() {\r\n    const getProjects = await axios\r\n      .get(\"/fermentation/projects\")\r\n      .then((response) => {\r\n        setProjects(response.data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  useEffect(() => {\r\n    getProjects();\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <ContextProvider value={{ projects, setProjects, setEdit }}>\r\n        <Navbar bg=\"light\" expand=\"lg\">\r\n          <Navbar.Brand>Fermentation Tracker</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav>\r\n              <Nav.Link href=\"/\">Home</Nav.Link>\r\n              <Nav.Link href=\"/projectForm\">Project Form</Nav.Link>\r\n              <Nav.Link href=\"/active\">\r\n                {activeProjects} Active Project{activeProjects === 1 ? \"\" : \"s\"}\r\n              </Nav.Link>\r\n              <Nav.Link href=\"/archive\">\r\n                {archivedProjects} Archived Project\r\n                {archivedProjects === 1 ? \"\" : \"s\"}\r\n              </Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n\r\n        <Switch>\r\n          <Route exact path=\"/\" component={() => <LandingPage />} />\r\n          <Route\r\n            exact\r\n            path=\"/projectForm\"\r\n            component={() => (\r\n              <ProjectForm edit={edit} selectedProject={selectedProject} />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/active\"\r\n            component={() => (\r\n              <ProjectDisplay\r\n                setSelectedProject={setSelectedProject}\r\n                projectState={true}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/archive\"\r\n            component={() => <ProjectDisplay projectState={false} />}\r\n          />\r\n        </Switch>\r\n      </ContextProvider>\r\n    </Router>\r\n  );\r\n};\r\n\r\nconst ProjectForm = ({ edit, selectedProject }) => {\r\n  const context = useContext(ContextConsumer);\r\n  const [projects, setProjects, setEdit] = [\r\n    context.projects,\r\n    context.setProjects,\r\n    context.setEdit,\r\n  ];\r\n  const [projectName, setProjectName] = useState(null);\r\n  const [description, setDescription] = useState(null);\r\n  const [weight, setWeight] = useState(null);\r\n  const [saltPercentage, setSaltPercentage] = useState(null);\r\n  const [saltWeight, setSaltWeight] = useState(null);\r\n  const [time, setTime] = useState(null);\r\n  const [notes, setNotes] = useState(null);\r\n  const [projectId, setProjectId] = useState(null);\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  // validate form inputs\r\n  const validateForm = () => {\r\n    if (\r\n      projectName !== null &&\r\n      description !== null &&\r\n      weight !== null &&\r\n      saltPercentage !== null &&\r\n      time !== null\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  // build project object if validation sucessful\r\n  const buildProject = () => {\r\n    if (validateForm() === true) {\r\n      const newProject = {\r\n        projectName: projectName,\r\n        description: description,\r\n        weight: weight,\r\n        saltPercentage: saltPercentage,\r\n        saltWeight: saltWeight,\r\n        time: time,\r\n        active: true,\r\n        notes: notes,\r\n      };\r\n      return { built: true, newProject: newProject };\r\n    } else {\r\n      window.alert(\"Please fill out all of the fields!\");\r\n      return { built: false };\r\n    }\r\n  };\r\n\r\n  // handle form button submitting new project\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setSubmitted(true);\r\n    const project = buildProject();\r\n\r\n    if (project.built) {\r\n      addProject(project.newProject).then((response) =>\r\n        setProjects([...projects, response])\r\n      );\r\n\r\n      toast.success(\"Project Added!\", {\r\n        position: \"bottom-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: false,\r\n        draggable: false,\r\n        progress: undefined,\r\n      });\r\n\r\n      handleReset();\r\n    }\r\n  };\r\n\r\n  // handle submit button click in edit state\r\n  const handleEdit = async (e) => {\r\n    e.preventDefault();\r\n    const update = buildProject();\r\n\r\n    if (update.built) {\r\n      updateProject(projectId, update.newProject).then(\r\n        (id) => (update.newProject._id = id)\r\n      );\r\n\r\n      const index = projects.findIndex((project) => project._id === projectId);\r\n      const updateLocal = [...projects];\r\n      updateLocal.splice(index, 1, update.newProject);\r\n      setProjects(updateLocal);\r\n\r\n      handleReset();\r\n\r\n      toast.success(\"Project Updated!\", {\r\n        position: \"bottom-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: false,\r\n        draggable: false,\r\n        progress: undefined,\r\n      });\r\n    }\r\n  };\r\n\r\n  // handle canceling edits click\r\n  const handleCancel = () => {\r\n    handleReset();\r\n\r\n    toast.warning(\"Updates Canceled!\", {\r\n      position: \"bottom-center\",\r\n      autoClose: 3000,\r\n      hideProgressBar: true,\r\n      closeOnClick: true,\r\n      pauseOnHover: false,\r\n      draggable: false,\r\n      progress: undefined,\r\n    });\r\n  };\r\n\r\n  // reset form and states to default\r\n  const handleReset = () => {\r\n    setSubmitted(false);\r\n    setEdit(false);\r\n    setProjectName(null);\r\n    setDescription(null);\r\n    setWeight(null);\r\n    setSaltPercentage(null);\r\n    setTime(null);\r\n    setNotes(null);\r\n    setProjectId(null);\r\n  };\r\n\r\n  // post new project\r\n  const addProject = async (newProject) => {\r\n    let addedProject;\r\n\r\n    await axios\r\n      .post(\"/fermentation/projects\", newProject)\r\n      .then((response) => {\r\n        addedProject = response.data.addedProject;\r\n      })\r\n      .catch((error) => console.log(error));\r\n\r\n    return addedProject;\r\n  };\r\n\r\n  // post edits to existing project\r\n  const updateProject = async (idToUpdate, updatedProject) => {\r\n    let updatedID;\r\n\r\n    await axios\r\n      .patch(\"/fermentation/projects/update\", {\r\n        id: idToUpdate,\r\n        project: updatedProject,\r\n      })\r\n      .then((response) => (updatedID = response.data.id))\r\n      .catch((error) => console.log(error));\r\n\r\n    return updatedID;\r\n  };\r\n\r\n  // fill form to with project details\r\n  const setFormToEdit = () => {\r\n    if (edit) {\r\n      setProjectName(selectedProject.projectName);\r\n      setDescription(selectedProject.description);\r\n      setWeight(selectedProject.weight);\r\n      setSaltPercentage(selectedProject.saltPercentage);\r\n      setTime(selectedProject.time);\r\n      setNotes(selectedProject.notes);\r\n      setProjectId(selectedProject._id);\r\n    }\r\n  };\r\n\r\n  const saltTotal = () => {\r\n    setSaltWeight((weight * (saltPercentage / 100)).toFixed(2));\r\n  };\r\n\r\n  useEffect(() => {\r\n    saltTotal();\r\n  }, [weight, saltPercentage]);\r\n\r\n  useEffect(() => {\r\n    setFormToEdit();\r\n  }, [edit]);\r\n\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"box\">\r\n        <Form id=\"form\">\r\n          <Form.Label className=\"label\">Fermentation Tracker</Form.Label>\r\n          <Row className=\"mt-2\">\r\n            <Col>\r\n              <FormInput\r\n                for=\"project\"\r\n                type=\"text\"\r\n                title=\"Project Name\"\r\n                onChange={setProjectName}\r\n                errorPresent={submitted && projectName === null}\r\n                value={projectName}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"mt-2\">\r\n            <Col>\r\n              <FormInput\r\n                for=\"description\"\r\n                type=\"text\"\r\n                title=\"Description\"\r\n                onChange={setDescription}\r\n                errorPresent={submitted && description === null}\r\n                value={description}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"mt-2\">\r\n            <Col>\r\n              <FormInput\r\n                for=\"weight\"\r\n                type=\"number\"\r\n                title=\"Dry Weight of Ferment (g)\"\r\n                onChange={setWeight}\r\n                errorPresent={submitted && weight === null}\r\n                value={weight}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"mt-2\">\r\n            <Col>\r\n              <FormInput\r\n                for=\"salt\"\r\n                type=\"number\"\r\n                title=\"Salt %\"\r\n                onChange={setSaltPercentage}\r\n                errorPresent={submitted && saltPercentage === null}\r\n                value={saltPercentage}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <label>Calculated Salt Weight (g)</label>\r\n              <FormInput\r\n                for=\"saltWeight\"\r\n                type=\"number\"\r\n                title=\"Salt Weight (g)\"\r\n                value={saltWeight}\r\n                readOnly={true}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <label>Complete on</label>\r\n              <FormInput\r\n                for=\"time\"\r\n                type=\"date\"\r\n                title=\"Complete on\"\r\n                onChange={setTime}\r\n                errorPresent={submitted && time === null}\r\n                value={time}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <label>Additional Notes?</label>\r\n              <br />\r\n              <NotesInput\r\n                for=\"notes\"\r\n                type=\"text\"\r\n                title=\"Additional notes\"\r\n                onChange={setNotes}\r\n                value={notes}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Button\r\n                className=\"ut-btn\"\r\n                type=\"submit\"\r\n                id=\"formButton\"\r\n                onClick={(e) => {\r\n                  if (edit) {\r\n                    handleEdit(e);\r\n                  } else {\r\n                    handleSubmit(e);\r\n                  }\r\n                }}\r\n              >\r\n                {edit ? \"Submit Edits\" : \"Submit\"}\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              {edit ? (\r\n                <Button\r\n                  className=\"ut-btn\"\r\n                  variant=\"danger\"\r\n                  size=\"lg\"\r\n                  onClick={() => handleCancel()}\r\n                >\r\n                  Cancel changes\r\n                </Button>\r\n              ) : (\r\n                <Button\r\n                  className=\"ut-btn\"\r\n                  variant=\"danger\"\r\n                  size=\"lg\"\r\n                  onClick={() => handleReset()}\r\n                >\r\n                  Clear Form\r\n                </Button>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}