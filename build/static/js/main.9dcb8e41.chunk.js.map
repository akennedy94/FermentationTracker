{"version":3,"sources":["inputs/FormInput.js","inputs/NotesInput.js","Context.js","index.js"],"names":["FormInput","props","className","errorPresent","type","id","for","name","title","onChange","event","parseInt","target","value","placeholder","required","readOnly","NotesInput","class","rows","Context","React","createContext","ContextProvider","Provider","ContextConsumer","Consumer","App","useState","projects","setProjects","edit","setEdit","selectedProject","setSelectedProject","activeProjects","filter","project","active","length","archivedProjects","a","axios","get","then","response","data","catch","error","console","log","useEffect","getProjects","Navbar","bg","expand","Brand","Nav","Link","to","exact","path","component","ProjectForm","ProjectDisplay","projectState","context","useContext","projectName","setProjectName","description","setDescription","weight","setWeight","saltPercentage","setSaltPercentage","saltWeight","setSaltWeight","time","setTime","notes","setNotes","projectId","setProjectId","submitted","setSubmitted","buildProject","built","newProject","window","alert","handleSubmit","e","preventDefault","addProject","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","handleReset","handleEdit","update","updateProject","_id","index","findIndex","updateLocal","splice","post","addedProject","idToUpdate","updatedProject","patch","updatedID","toFixed","Form","Label","Row","Col","Button","size","onClick","variant","warning","handleStatusChange","confirm","handleEditClick","handleDelete","delete","updatedProjects","Container","style","height","map","ReactDOM","render","document","getElementById","configure","ProjectCard","pastDue","setPastDue","projectDate","today","format","Date","projectDue","parseISO","compareDesc","checkDate","Card","width","Header","color","fontSize","Title","Body","Text","EmptyCard"],"mappings":"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","file":"static/js/main.9dcb8e41.chunk.js","sourcesContent":["const FormInput = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <input \r\n                className={`form-control ${props.errorPresent ? \"form-error\" : \"\"}`}\r\n                type={props.type} \r\n                id={props.for}\r\n                name={props.title}\r\n                onChange={(event) => {\r\n                    if(parseInt(event.target.value) && parseInt(event.target.value) < 0) {\r\n                        return\r\n                    } else {\r\n                        props.onChange(event.target.value);\r\n                    }\r\n                }}\r\n                value={`${props.value === null ? \"\" : props.value}`}\r\n                placeholder={props.title}\r\n                required\r\n                readOnly={props.readOnly ? props.readOnly : false}\r\n            /><br/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormInput;","const NotesInput = (props) => {\r\n    return (\r\n        <div>\r\n            <textarea \r\n            class=\"form-control\" \r\n            id={props.for} \r\n            rows=\"3\" \r\n            onChange={(event) => props.onChange(event.target.value)}\r\n            placeholder={props.title}\r\n            value={props.value ? props.value : null}\r\n            /><br/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotesInput;","import React from 'react';\r\n\r\nconst Context = React.createContext([]);\r\n\r\nexport const ContextProvider = Context.Provider;\r\nexport const ContextConsumer = Context.Consumer;\r\n\r\nexport default Context;","import React, { useState, useEffect, useContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport FormInput from './inputs/FormInput';\nimport NotesInput from './inputs/NotesInput';\nimport axios from 'axios';\nimport { compareDesc, format, parseISO } from 'date-fns'\nimport { Container, Form, Button, Row, Col, Navbar, Nav, Card } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport './index.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ContextConsumer, ContextProvider } from './Context.js';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\ntoast.configure();\n\nfunction App() {\n  const [projects, setProjects] = useState([]);\n  const [edit, setEdit] = useState(false);\n  const [selectedProject, setSelectedProject] = useState({});\n  const activeProjects = projects.filter(project => project.active === true).length;\n  const archivedProjects = projects.filter(project => project.active === false).length;\n\n  async function getProjects () {\n    const getProjects = await axios.get('/fermentation/projects')\n      .then(response => {setProjects(response.data)})\n      .catch(error => console.log(error));\n  }\n\n  useEffect(() => {getProjects()}, []);\n\n  return (\n    <Router>\n      <ContextProvider value={{projects, setProjects, setEdit}}>\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand>Fermentation Tracker</Navbar.Brand>\n        <Nav className=\"mr-auto\">\n          <Nav.Link><Link to=\"/\">Project Form</Link></Nav.Link>\n          <Nav.Link><Link to=\"/active\">{activeProjects} Active Projects</Link></Nav.Link>\n          <Nav.Link><Link to=\"/archive\">{archivedProjects} Archived Projects</Link></Nav.Link>\n        </Nav>\n      </Navbar>\n\n      <Switch>\n        <Route exact path=\"/\" component={() => <ProjectForm edit={edit} selectedProject={selectedProject} />} />\n        <Route exact path=\"/active\" component={() => <ProjectDisplay  setSelectedProject={setSelectedProject} projectState={true} />} />\n        <Route exact path=\"/archive\" component={() => <ProjectDisplay projectState={false} />} />\n      </Switch>\n      </ContextProvider>\n    </Router>\n  );\n}\n\nfunction ProjectForm ({ edit, selectedProject }) {\n  const context = useContext(ContextConsumer);\n  const [projects, setProjects, setEdit] = [context.projects, context.setProjects, context.setEdit];\n  const [projectName, setProjectName] = useState(null);  \n  const [description, setDescription] = useState(null);\n  const [weight, setWeight] = useState(null);\n  const [saltPercentage, setSaltPercentage] = useState(null);\n  const [saltWeight, setSaltWeight] = useState(null);\n  const [time, setTime] = useState(null);\n  const [notes, setNotes] = useState(null);\n  const [projectId, setProjectId] = useState(null);\n  const [submitted, setSubmitted] = useState(false);\n\n  // validate form inputs\n  const validateForm = () => {\n    if (projectName !== null \n      && description !== null \n      && weight !== null \n      && saltPercentage !== null \n      && time !== null) {\n        return true;\n      }\n    return false;\n  }\n\n  // build project object if validation sucessful\n  const buildProject = () => {\n    if (validateForm() === true) {\n      const newProject = {\n        projectName: projectName,\n        description: description,\n        weight: weight,\n        saltPercentage: saltPercentage,\n        saltWeight: saltWeight,\n        time: time,\n        active: true,\n        notes: notes\n      }\n      return {built: true, newProject: newProject};\n    } else {\n      window.alert('Please fill out all of the fields!');\n      return {built: false};\n    }\n  }\n    \n  // handle form button submitting new project\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setSubmitted(true);\n    const project = buildProject();\n\n    if (project.built) {\n      addProject(project.newProject)\n        .then(response => setProjects([...projects, response]));\n\n      toast.success(\"Project Added!\", {\n        position: \"bottom-center\",\n        autoClose: 3000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: false,\n        progress: undefined\n      });\n\n      handleReset();\n    }\n  }\n  \n  // handle submit button click in edit state\n  const handleEdit = async (e) => {\n    e.preventDefault();\n    const update = buildProject();\n\n    if (update.built){\n      updateProject(projectId, update.newProject).then(id => update.newProject._id = id);\n\n      const index = projects.findIndex(project => project._id === projectId);\n      const updateLocal = [...projects];\n      updateLocal.splice(index, 1, update.newProject);\n      setProjects(updateLocal);\n\n      handleReset();\n      \n      toast.success(\"Project Updated!\", {\n        position: \"bottom-center\",\n        autoClose: 3000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: false,\n        progress: undefined\n      })\n    }\n  }\n\n  // handle canceling edits click\n  const handleCancel = () => {\n    handleReset();\n      \n    toast.warning(\"Updates Canceled!\", {\n      position: \"bottom-center\",\n      autoClose: 3000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: false,\n      draggable: false,\n      progress: undefined\n    });\n  }\n\n  // reset form and states to default\n  const handleReset = () => {\n    setSubmitted(false);\n    setEdit(false);\n    setProjectName(null);\n    setDescription(null);\n    setWeight(null);\n    setSaltPercentage(null);\n    setTime(null);\n    setNotes(null);\n    setProjectId(null);\n  }\n\n\n  // post new project\n  const addProject = async (newProject) => {\n    let addedProject;\n\n    await axios.post('/fermentation/projects', newProject)\n      .then(response => {\n        addedProject = response.data.addedProject;\n      }).catch(error => console.log(error));\n\n    return addedProject;\n  }\n\n  // post edits to existing project\n  const updateProject = async (idToUpdate, updatedProject) => {\n    let updatedID;\n\n    await axios.patch('/fermentation/projects/update', {id: idToUpdate, project: updatedProject})\n      .then(response => updatedID = response.data.id)\n      .catch(error => console.log(error));\n\n    return updatedID;\n  }\n\n  // fill form to with project details\n  const setFormToEdit = () => {\n    if (edit) {\n\n      setProjectName(selectedProject.projectName);\n      setDescription(selectedProject.description);\n      setWeight(selectedProject.weight);\n      setSaltPercentage(selectedProject.saltPercentage);\n      setTime(selectedProject.time);\n      setNotes(selectedProject.notes);\n      setProjectId(selectedProject._id);\n    }\n  }\n  \n  const saltTotal = () => {\n    setSaltWeight((weight * (saltPercentage / 100)).toFixed(2));\n  }\n\n  useEffect(() => {saltTotal()}, [weight, saltPercentage]);\n\n  useEffect(() => {setFormToEdit()}, [edit]);\n\n  return (\n    <div className=\"section\">\n        <div className=\"box\">\n          <Form id=\"form\">\n            <Form.Label className=\"label\">Fermentation Tracker</Form.Label>\n              <Row className=\"mt-2\">\n                <Col>\n                  <FormInput for=\"project\" type=\"text\" title=\"Project Name\" onChange={setProjectName} errorPresent={submitted && projectName === null} value={projectName} />\n                </Col>\n              </Row>\n              <Row className=\"mt-2\">\n                <Col>\n                   <FormInput for=\"description\" type=\"text\" title=\"Description\" onChange={setDescription} errorPresent={submitted && description === null} value={description} />\n                </Col>\n              </Row>\n              <Row className=\"mt-2\">\n                <Col>\n                  <FormInput for=\"weight\" type=\"number\" title=\"Dry Weight of Ferment (g)\" onChange={setWeight} errorPresent={submitted && weight === null} value={weight} />\n                </Col>\n              </Row>\n              <Row className=\"mt-2\">\n                <Col>\n                  <FormInput for=\"salt\" type=\"number\" title=\"Salt %\" onChange={setSaltPercentage} errorPresent={submitted && saltPercentage === null} value={saltPercentage} />\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <label>Calculated Salt Weight (g)</label>\n                  <FormInput for=\"saltWeight\" type=\"number\" title=\"Salt Weight (g)\" value={saltWeight} readOnly={true} />\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <label>Complete on</label>\n                  <FormInput for=\"time\" type=\"date\" title=\"Complete on\" onChange={setTime} errorPresent={submitted && time === null} value={time} />\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <label>Additional Notes?</label><br/>\n                  <NotesInput for=\"notes\" type=\"text\" title=\"Additional notes\" onChange={setNotes} value={notes} />\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <Button \n                    size=\"lg\"\n                    type=\"submit\" \n                    id=\"formButton\" \n                    onClick={(e) => {\n                      if (edit) {\n                        handleEdit(e);\n                      } else {\n                        handleSubmit(e);\n                      }\n                    }}>{edit ? \"Submit Edits\" : \"Submit\"}</Button>\n                </Col>\n                <Col>\n                  {edit ? <Button variant=\"danger\" size=\"lg\" onClick={() => handleCancel()}>Cancel changes</Button> \n                  : \n                  <Button variant=\"danger\" size=\"lg\" onClick={() => handleReset()}>Clear Form</Button>}\n                </Col>\n              </Row>\n          </Form>\n        </div>\n    </div>\n  )\n}\n\nfunction ProjectDisplay ({  projectState, setSelectedProject }) {\n  const context = useContext(ContextConsumer);\n  const [projects, setProjects, setEdit] = [context.projects, context.setProjects, context.setEdit];\n  const filter = projects.filter(project => project.active === projectState);\n\n  // sets project status to complete\n  const handleStatusChange = (e) => {\n    const confirm = window.confirm(\"Mark project as completed?\");\n    if (confirm === true) {\n      const setStatus = axios.patch('/fermentation/projects', {id: e.target.id})\n        .then(response => console.log(response))\n        .catch(error => console.log(error));\n\n      const index = projects.findIndex(project => project._id === e.target.id);\n      projects[index].active = false;\n\n      setProjects([...projects]);\n\n      toast.success(\"Project moved to archive!\", {\n        position: \"bottom-center\",\n        autoClose: 4000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: false,\n        progress: undefined\n      })\n\n    }\n  }\n\n  // Set form to edit\n  const handleEditClick = (project) => {\n    setSelectedProject(project);\n    setEdit(true);\n  }\n\n  // deletes project from database\n  const handleDelete = (e) => {\n    const confirm = window.confirm(\"Are you sure you want to delete this project?\");\n      if (confirm === true) {\n        const deleteProject = axios.delete('/fermentation/projects', {data: {id: e.target.id}})\n          .then(response => console.log(response))\n          .catch(error => console.log(error));\n\n        const updatedProjects = projects.filter(project => project._id !== e.target.id);\n        setProjects(updatedProjects);\n        \n        toast.success(\"Project Deleted!\", {\n          position: \"bottom-center\",\n          autoClose: 3000,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: false,\n          draggable: false,\n          progress: undefined\n        })\n      }\n  }\n\n  return (\n    <Container style={{height: \"100rem\"}}>\n      <Row>\n        {\n          filter.length === 0 ? \n            <Col className=\"d-flex justify-content-center\">\n              <EmptyCard projectState={projectState}/>\n            </Col>\n          :\n          filter.map(project => {\n            return <ProjectCard project={project} handleStatusChange={handleStatusChange} handleDelete={handleDelete} handleEditClick={handleEditClick}/>\n          })\n        }\n      </Row>\n    </Container>\n  )\n}\n\nconst ProjectCard = ({project, handleStatusChange, handleDelete, handleEditClick}) => {\n  const [pastDue, setPastDue] = useState(false);\n  \n  // check to see if before or after due date\n  const checkDate = (projectDate) => {\n    const today = format(new Date(), \"yyyy-MM-dd\");\n    const projectDue = format(parseISO(projectDate), \"yyyy-MM-dd\");\n\n    if (compareDesc(parseISO(today), parseISO(projectDue)) < 0) {\n      setPastDue(true);\n    }\n  }\n\n  // set pastDue state on component mount \n  useEffect(() => {checkDate(project.time)}, []);\n\n  return (\n      <Card key={project._id} className=\"mt-4 ml-4\" style={{width: \"40rem\"}}>\n        <Card.Header>\n          {pastDue && project.active ? <i className=\"fas fa-exclamation mr-4 mt-1\" style={{color: \"red\", fontSize: \"1.5rem\"}} title=\"This project is past due!\"/> : null}\n          <Card.Title className=\"mt-1\">{project.projectName}</Card.Title>\n        </Card.Header>\n          \n        <Card.Body>\n          <Card.Text className=\"text-left project-details\">\n            <strong>Description:</strong> {project.description} <br/>\n            <strong>Total Dry Weight (g):</strong> {project.weight} g <br/>\n            <strong>Salt Percentage:</strong> {project.saltPercentage}% <br/>\n            <strong>Total Salt:</strong> {project.saltWeight} g <br/>\n            {project.active ? <div><strong>Complete on:</strong> {project.time}<br/></div> : <div><strong>Completed on:</strong> {project.time}<br/></div>}\n            <strong>Notes:</strong><br/> {project.notes === \"\" ? \"N/A\" : project.notes}\n          </Card.Text>\n          <Row className=\"mt-4\">\n            <Col>\n              {\n                project.active ? <Button size=\"md\" onClick={handleStatusChange} \n                id={project._id}>Mark Project As Complete</Button> : null\n              }\n            </Col>\n            <Col>\n              <Button variant=\"danger\" size=\"md\" onClick={handleDelete} id={project._id}>Delete Project</Button>\n            </Col>\n            <Col>\n              {\n                project.active ? \n                  <Link to=\"/\">\n                    <Button variant=\"warning\" size=\"md\" onClick={() => handleEditClick(project)}\n                    id={project._id}>Edit This Project</Button>\n                  </Link>\n                : null\n              }\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    )\n}\n\nconst EmptyCard = ({ projectState }) => {\n  return (\n    <Card id=\"empty-card\">\n      <Card.Header>\n        <Card.Title className=\"mt-2\">You haven't {projectState ? \"added\" : \"archived\"} any projects yet!</Card.Title>\n      </Card.Header>\n      <Card.Body>\n        <Card.Text>\n          This page will contain projects {projectState ? \"you're currently working on!\" : \"you've completed and archived!\" }. <br></br>\n          {projectState ? \"You can start tracking projects by filling out the form!\" : \"You can complete and archive a project in the active projects screen!\"}\n        </Card.Text>\n      </Card.Body>\n    </Card>\n  )\n}"],"sourceRoot":""}