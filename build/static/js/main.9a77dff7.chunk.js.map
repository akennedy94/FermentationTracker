{"version":3,"sources":["inputs/FormInput.js","inputs/NotesInput.js","Context.js","subcomponents/projectDisplay.js","icons/logo.png","subcomponents/LandingPage.js","index.js"],"names":["FormInput","props","className","errorPresent","type","id","for","name","title","onChange","event","parseInt","target","value","placeholder","required","readOnly","NotesInput","class","rows","Context","React","createContext","ContextProvider","Provider","ContextConsumer","Consumer","ProjectCard","project","handleStatusChange","handleDelete","handleEditClick","useState","pastDue","setPastDue","useEffect","projectDate","today","format","Date","projectDue","parseISO","compareDesc","checkDate","time","Col","Card","Header","active","style","color","fontSize","Title","projectName","Body","Text","description","weight","saltPercentage","saltWeight","notes","Row","Button","onClick","_id","variant","to","EmptyCard","projectState","ProjectDisplay","setSelectedProject","context","useContext","projects","setProjects","setEdit","filter","e","window","confirm","axios","patch","then","response","console","log","catch","error","index","findIndex","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","delete","data","updatedProjects","Container","height","length","map","LandingPage","Image","src","logo","alt","href","configure","App","edit","selectedProject","activeProjects","archivedProjects","a","get","getProjects","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","Link","exact","path","component","ProjectForm","setProjectName","setDescription","setWeight","setSaltPercentage","setSaltWeight","setTime","setNotes","projectId","setProjectId","submitted","setSubmitted","buildProject","built","newProject","alert","handleSubmit","preventDefault","addProject","handleReset","handleEdit","update","updateProject","updateLocal","splice","post","addedProject","idToUpdate","updatedProject","updatedID","toFixed","Form","Label","size","warning","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9a77dff7.chunk.js","sourcesContent":["const FormInput = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <input \r\n                className={`form-control ${props.errorPresent ? \"form-error\" : \"\"}`}\r\n                type={props.type} \r\n                id={props.for}\r\n                name={props.title}\r\n                onChange={(event) => {\r\n                    if(parseInt(event.target.value) && parseInt(event.target.value) < 0) {\r\n                        return\r\n                    } else {\r\n                        props.onChange(event.target.value);\r\n                    }\r\n                }}\r\n                value={`${props.value === null ? \"\" : props.value}`}\r\n                placeholder={props.title}\r\n                required\r\n                readOnly={props.readOnly ? props.readOnly : false}\r\n            /><br/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormInput;","const NotesInput = (props) => {\r\n    return (\r\n        <div>\r\n            <textarea \r\n            class=\"form-control\" \r\n            id={props.for} \r\n            rows=\"3\" \r\n            onChange={(event) => props.onChange(event.target.value)}\r\n            placeholder={props.title}\r\n            value={props.value ? props.value : null}\r\n            /><br/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotesInput;","import React from 'react';\r\n\r\nconst Context = React.createContext([]);\r\n\r\nexport const ContextProvider = Context.Provider;\r\nexport const ContextConsumer = Context.Consumer;\r\n\r\nexport default Context;","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Container,  Button, Row, Col, Card } from 'react-bootstrap';\r\nimport { ContextConsumer } from '../Context.js';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { compareDesc, format, parseISO } from 'date-fns';\r\nimport { Link } from \"react-router-dom\";\r\nimport '../css/projectDisplay.css';\r\n\r\nconst ProjectDisplay = ({  projectState, setSelectedProject }) => {\r\n    const context = useContext(ContextConsumer);\r\n    const [projects, setProjects, setEdit] = [context.projects, context.setProjects, context.setEdit];\r\n    const filter = projects.filter(project => project.active === projectState);\r\n  \r\n    // sets project status to complete\r\n    const handleStatusChange = (e) => {\r\n      const confirm = window.confirm(\"Mark project as completed?\");\r\n      if (confirm === true) {\r\n        const setStatus = axios.patch('/fermentation/projects', {id: e.target.id})\r\n          .then(response => console.log(response))\r\n          .catch(error => console.log(error));\r\n  \r\n        const index = projects.findIndex(project => project._id === e.target.id);\r\n        projects[index].active = false;\r\n  \r\n        setProjects([...projects]);\r\n  \r\n        toast.success(\"Project moved to archive!\", {\r\n          position: \"bottom-center\",\r\n          autoClose: 4000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: false,\r\n          draggable: false,\r\n          progress: undefined\r\n        })\r\n  \r\n      }\r\n    }\r\n  \r\n    // Set form to edit\r\n    const handleEditClick = (project) => {\r\n      setSelectedProject(project);\r\n      setEdit(true);\r\n    }\r\n  \r\n    // deletes project from database\r\n    const handleDelete = (e) => {\r\n      const confirm = window.confirm(\"Are you sure you want to delete this project?\");\r\n        if (confirm === true) {\r\n          const deleteProject = axios.delete('/fermentation/projects', {data: {id: e.target.id}})\r\n            .then(response => console.log(response))\r\n            .catch(error => console.log(error));\r\n  \r\n          const updatedProjects = projects.filter(project => project._id !== e.target.id);\r\n          setProjects(updatedProjects);\r\n          \r\n          toast.success(\"Project Deleted!\", {\r\n            position: \"bottom-center\",\r\n            autoClose: 3000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: false,\r\n            draggable: false,\r\n            progress: undefined\r\n          })\r\n        }\r\n    }\r\n  \r\n    return (\r\n      <Container style={{height: \"100rem\"}}>\r\n        <Row>\r\n          {\r\n            filter.length === 0 ? \r\n              <Col className=\"d-flex justify-content-center\">\r\n                <EmptyCard projectState={projectState}/>\r\n              </Col>\r\n            :\r\n            filter.map(project => {\r\n              return <ProjectCard project={project} handleStatusChange={handleStatusChange} handleDelete={handleDelete} handleEditClick={handleEditClick}/>\r\n            })\r\n          }\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n  \r\n  const ProjectCard = ({project, handleStatusChange, handleDelete, handleEditClick}) => {\r\n    const [pastDue, setPastDue] = useState(false);\r\n    \r\n    // check to see if before or after due date\r\n    const checkDate = (projectDate) => {\r\n      const today = format(new Date(), \"yyyy-MM-dd\");\r\n      const projectDue = format(parseISO(projectDate), \"yyyy-MM-dd\");\r\n  \r\n      if (compareDesc(parseISO(today), parseISO(projectDue)) < 0) {\r\n        setPastDue(true);\r\n      }\r\n    }\r\n  \r\n    // set pastDue state on component mount \r\n    useEffect(() => {checkDate(project.time)}, []);\r\n\r\n    return (\r\n        <Col className=\"project-col\">\r\n            <Card key={project._id} >\r\n                <Card.Header>\r\n                    {pastDue && project.active ? <i className=\"fas fa-exclamation mr-4 mt-1\" style={{color: \"red\", fontSize: \"1.5rem\"}} title=\"This project is past due!\"/> : null}\r\n                    <Card.Title className=\"mt-1\">{project.projectName}</Card.Title>\r\n                </Card.Header>\r\n                    \r\n                <Card.Body>\r\n                    <Card.Text className=\"text-left\">\r\n                    <strong>Description:</strong> {project.description} <br/>\r\n                    <strong>Total Dry Weight (g):</strong> {project.weight} g <br/>\r\n                    <strong>Salt Percentage:</strong> {project.saltPercentage}% <br/>\r\n                    <strong>Total Salt:</strong> {project.saltWeight} g <br/>\r\n                    {project.active ? <div><strong>Complete on:</strong> {project.time}<br/></div> : <div><strong>Completed on:</strong> {project.time}<br/></div>}\r\n                    <strong>Notes:</strong><br/> {project.notes === \"\" ? \"N/A\" : project.notes}\r\n                    </Card.Text>\r\n                    <Row className=\"mt-4 btn-row\">\r\n                        <Col className=\"btn-col\">\r\n                            {\r\n                            project.active ? <Button className=\"ut-btn\" onClick={handleStatusChange} \r\n                            id={project._id}>Complete Project</Button> : null\r\n                            }\r\n                        </Col>\r\n                        <Col className=\"btn-col\">\r\n                            <Button variant=\"danger\" className=\"ut-btn\" onClick={handleDelete} id={project._id}>Delete Project</Button>\r\n                        </Col>\r\n                        <Col className=\"btn-col\">\r\n                            {\r\n                            project.active ? \r\n                                <Link to=\"/\">\r\n                                    <Button variant=\"warning\" className=\"ut-btn\" onClick={() => handleEditClick(project)}\r\n                                    id={project._id}>Edit Project</Button>\r\n                                </Link>\r\n                            : null\r\n                            }\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Body>\r\n            </Card>\r\n        </Col>\r\n      )\r\n  }\r\n  \r\n  const EmptyCard = ({ projectState }) => {\r\n    return (\r\n      <Card id=\"empty-card\">\r\n        <Card.Header className=\"empty-header\">\r\n          <Card.Title className=\"mt-2\">You haven't {projectState ? \"added\" : \"archived\"} any projects yet!</Card.Title>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <Card.Text>\r\n            This page will contain projects {projectState ? \"you're currently working on!\" : \"you've completed and archived!\" }. <br></br>\r\n            {projectState ? \"You can start tracking projects by filling out the form!\" : \"You can complete and archive a project in the active projects screen!\"}\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    )\r\n  }\r\n\r\n  export default ProjectDisplay","export default __webpack_public_path__ + \"static/media/logo.82fea119.png\";","import logo from '../icons/logo.png';\r\nimport '../css/landingPage.css';\r\nimport { Container, Row, Col, Image, Button } from 'react-bootstrap';\r\n\r\nconst LandingPage = () => {\r\n    return (\r\n      <Container>\r\n          <Row>\r\n            <Col>\r\n                <Image src={logo} alt=\"brand logo\" className=\"logo\"/>\r\n            </Col>\r\n            <Col className=\"text-center text-col\">\r\n                <h1>Fermentation Tracker</h1> <br/>\r\n                <p> This a web app for tracking different lacto-fermentation projects! <br/> <br/>\r\n\r\n                    For more information about the background \r\n                    or technical workings of this app, \r\n                    please checkout the readme \r\n                    located in the project's  \r\n                    <a href=\"https://github.com/akennedy94/FermentationTracker\" alt=\"github link\"> \r\n                    &nbsp;github repository.</a> <br/> <br/>\r\n\r\n                    To begin using this app, click the button below to be taken to the project form! <br/> <br/>\r\n                </p>\r\n                <Row className=\"justify-content-center mb-2\">\r\n                    <Button href=\"/projectForm\" className=\"btn btn-lg\">Get Started!</Button>\r\n                </Row>\r\n            </Col>\r\n          </Row>\r\n      </Container>\r\n    )\r\n  }\r\n\r\nexport default LandingPage;","import React, { useState, useEffect, useContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport FormInput from './inputs/FormInput';\nimport NotesInput from './inputs/NotesInput';\nimport axios from 'axios';\nimport {  Form, Button, Row, Col, Navbar, Nav } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport './css/index.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ContextConsumer, ContextProvider } from './Context.js';\nimport ProjectDisplay from './subcomponents/projectDisplay.js';\nimport LandingPage from './subcomponents/LandingPage.js';\n\ntoast.configure();\n\nconst App = () => {\n  const [projects, setProjects] = useState([]);\n  const [edit, setEdit] = useState(false);\n  const [selectedProject, setSelectedProject] = useState({});\n  const activeProjects = projects.filter(project => project.active === true).length;\n  const archivedProjects = projects.filter(project => project.active === false).length;\n\n  async function getProjects () {\n    const getProjects = await axios.get('/fermentation/projects')\n      .then(response => {setProjects(response.data)})\n      .catch(error => console.log(error));\n  }\n\n  useEffect(() => {getProjects()}, []);\n\n  return (\n    <Router>\n      <ContextProvider value={{projects, setProjects, setEdit}}>\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand>Fermentation Tracker</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav>\n            <Nav.Link href=\"/\">Home</Nav.Link>\n            <Nav.Link href=\"/projectForm\">Project Form</Nav.Link>\n            <Nav.Link href=\"/active\">{activeProjects} Active Project{activeProjects === 1 ? \"\" : \"s\"}</Nav.Link>\n            <Nav.Link href=\"/archive\">{archivedProjects} Archived Project{archivedProjects === 1 ? \"\" : \"s\"}</Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n\n      <Switch>\n        <Route exact path=\"/\" component={() => <LandingPage />} />\n        <Route exact path=\"/projectForm\" component={() => <ProjectForm edit={edit} selectedProject={selectedProject} />} />\n        <Route exact path=\"/active\" component={() => <ProjectDisplay  setSelectedProject={setSelectedProject} projectState={true} />} />\n        <Route exact path=\"/archive\" component={() => <ProjectDisplay projectState={false} />} />\n      </Switch>\n      </ContextProvider>\n    </Router>\n  );\n}\n\nconst ProjectForm = ({ edit, selectedProject }) => {\n  const context = useContext(ContextConsumer);\n  const [projects, setProjects, setEdit] = [context.projects, context.setProjects, context.setEdit];\n  const [projectName, setProjectName] = useState(null);  \n  const [description, setDescription] = useState(null);\n  const [weight, setWeight] = useState(null);\n  const [saltPercentage, setSaltPercentage] = useState(null);\n  const [saltWeight, setSaltWeight] = useState(null);\n  const [time, setTime] = useState(null);\n  const [notes, setNotes] = useState(null);\n  const [projectId, setProjectId] = useState(null);\n  const [submitted, setSubmitted] = useState(false);\n\n  // validate form inputs\n  const validateForm = () => {\n    if (projectName !== null \n      && description !== null \n      && weight !== null \n      && saltPercentage !== null \n      && time !== null) {\n        return true;\n      }\n    return false;\n  }\n\n  // build project object if validation sucessful\n  const buildProject = () => {\n    if (validateForm() === true) {\n      const newProject = {\n        projectName: projectName,\n        description: description,\n        weight: weight,\n        saltPercentage: saltPercentage,\n        saltWeight: saltWeight,\n        time: time,\n        active: true,\n        notes: notes\n      }\n      return {built: true, newProject: newProject};\n    } else {\n      window.alert('Please fill out all of the fields!');\n      return {built: false};\n    }\n  }\n    \n  // handle form button submitting new project\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setSubmitted(true);\n    const project = buildProject();\n\n    if (project.built) {\n      addProject(project.newProject)\n        .then(response => setProjects([...projects, response]));\n\n      toast.success(\"Project Added!\", {\n        position: \"bottom-center\",\n        autoClose: 3000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: false,\n        progress: undefined\n      });\n\n      handleReset();\n    }\n  }\n  \n  // handle submit button click in edit state\n  const handleEdit = async (e) => {\n    e.preventDefault();\n    const update = buildProject();\n\n    if (update.built){\n      updateProject(projectId, update.newProject).then(id => update.newProject._id = id);\n\n      const index = projects.findIndex(project => project._id === projectId);\n      const updateLocal = [...projects];\n      updateLocal.splice(index, 1, update.newProject);\n      setProjects(updateLocal);\n\n      handleReset();\n      \n      toast.success(\"Project Updated!\", {\n        position: \"bottom-center\",\n        autoClose: 3000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: false,\n        progress: undefined\n      })\n    }\n  }\n\n  // handle canceling edits click\n  const handleCancel = () => {\n    handleReset();\n      \n    toast.warning(\"Updates Canceled!\", {\n      position: \"bottom-center\",\n      autoClose: 3000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: false,\n      draggable: false,\n      progress: undefined\n    });\n  }\n\n  // reset form and states to default\n  const handleReset = () => {\n    setSubmitted(false);\n    setEdit(false);\n    setProjectName(null);\n    setDescription(null);\n    setWeight(null);\n    setSaltPercentage(null);\n    setTime(null);\n    setNotes(null);\n    setProjectId(null);\n  }\n\n\n  // post new project\n  const addProject = async (newProject) => {\n    let addedProject;\n\n    await axios.post('/fermentation/projects', newProject)\n      .then(response => {\n        addedProject = response.data.addedProject;\n      }).catch(error => console.log(error));\n\n    return addedProject;\n  }\n\n  // post edits to existing project\n  const updateProject = async (idToUpdate, updatedProject) => {\n    let updatedID;\n\n    await axios.patch('/fermentation/projects/update', {id: idToUpdate, project: updatedProject})\n      .then(response => updatedID = response.data.id)\n      .catch(error => console.log(error));\n\n    return updatedID;\n  }\n\n  // fill form to with project details\n  const setFormToEdit = () => {\n    if (edit) {\n\n      setProjectName(selectedProject.projectName);\n      setDescription(selectedProject.description);\n      setWeight(selectedProject.weight);\n      setSaltPercentage(selectedProject.saltPercentage);\n      setTime(selectedProject.time);\n      setNotes(selectedProject.notes);\n      setProjectId(selectedProject._id);\n    }\n  }\n  \n  const saltTotal = () => {\n    setSaltWeight((weight * (saltPercentage / 100)).toFixed(2));\n  }\n\n  useEffect(() => {saltTotal()}, [weight, saltPercentage]);\n\n  useEffect(() => {setFormToEdit()}, [edit]);\n\n  return (\n    <div className=\"section\">\n        <div className=\"box\">\n          <Form id=\"form\">\n            <Form.Label className=\"label\">Fermentation Tracker</Form.Label>\n              <Row className=\"mt-2\">\n                <Col>\n                  <FormInput for=\"project\" type=\"text\" title=\"Project Name\" onChange={setProjectName} errorPresent={submitted && projectName === null} value={projectName} />\n                </Col>\n              </Row>\n              <Row className=\"mt-2\">\n                <Col>\n                   <FormInput for=\"description\" type=\"text\" title=\"Description\" onChange={setDescription} errorPresent={submitted && description === null} value={description} />\n                </Col>\n              </Row>\n              <Row className=\"mt-2\">\n                <Col>\n                  <FormInput for=\"weight\" type=\"number\" title=\"Dry Weight of Ferment (g)\" onChange={setWeight} errorPresent={submitted && weight === null} value={weight} />\n                </Col>\n              </Row>\n              <Row className=\"mt-2\">\n                <Col>\n                  <FormInput for=\"salt\" type=\"number\" title=\"Salt %\" onChange={setSaltPercentage} errorPresent={submitted && saltPercentage === null} value={saltPercentage} />\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <label>Calculated Salt Weight (g)</label>\n                  <FormInput for=\"saltWeight\" type=\"number\" title=\"Salt Weight (g)\" value={saltWeight} readOnly={true} />\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <label>Complete on</label>\n                  <FormInput for=\"time\" type=\"date\" title=\"Complete on\" onChange={setTime} errorPresent={submitted && time === null} value={time} />\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <label>Additional Notes?</label><br/>\n                  <NotesInput for=\"notes\" type=\"text\" title=\"Additional notes\" onChange={setNotes} value={notes} />\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <Button \n                    className=\"ut-btn\"\n                    type=\"submit\" \n                    id=\"formButton\" \n                    onClick={(e) => {\n                      if (edit) {\n                        handleEdit(e);\n                      } else {\n                        handleSubmit(e);\n                      }\n                    }}>{edit ? \"Submit Edits\" : \"Submit\"}</Button>\n                </Col>\n                <Col>\n                  {edit ? <Button className=\"ut-btn\" variant=\"danger\" size=\"lg\" onClick={() => handleCancel()}>Cancel changes</Button> \n                  : \n                  <Button className=\"ut-btn\" variant=\"danger\" size=\"lg\" onClick={() => handleReset()}>Clear Form</Button>}\n                </Col>\n              </Row>\n          </Form>\n        </div>\n    </div>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}